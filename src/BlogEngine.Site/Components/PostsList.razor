@using System.Globalization
@using BlazorStatic
@using BlazorStatic.Services
@inject BlazorStaticContentService<PostFrontMatter> blazorStaticContentService
@inject BlazorStaticService blazorStaticService

<ul id="home" class="posts">
    @foreach(var post in posts.OrderByDescending(x => x.FrontMatter.Published))
    {
        <li>
            <article>
                <div class="space-y-2 xl:grid xl:grid-cols-4 xl:items-baseline xl:space-y-0">
                    <div class="space-y-5 xl:col-span-3">
                        <div class="space-y-6">
                            <div>
                                <h2 class="text-2xl font-bold leading-8 tracking-tight">
                                    <a class="text-gray-100" href="@blazorStaticContentService.Options.PageUrl/@(post.Url)">@post.FrontMatter.Title</a>
                                </h2>
                                <h4 class="subheader"><time>@post.FrontMatter.Published.ToLongDateString()</time></h4>
                            </div>
                            <div class="prose max-w-none text-gray-400">
                                @((MarkupString)post.FrontMatter.Lead)
                            </div>
                        </div>
                        <div class="text-base font-medium leading-6">
                            <a class="text-primary-500 hover:text-primary-400" aria-label='Read "@(post.FrontMatter.Lead)"' href="@blazorStaticContentService.Options.PageUrl/@(post.Url)">Read more â†’</a>
                        </div>
                    </div>
                </div>
            </article>
        </li>
    }
</ul>


@code {
    List<Post<PostFrontMatter>> posts = new();


    [Parameter] public List<Post<PostFrontMatter>>? Posts { get; set; }
    protected override void OnInitialized()
    {
        posts = Posts != null ? Posts.OrderBy(x => x.FrontMatter.Published).ToList() : blazorStaticContentService.Posts;
        base.OnInitialized();
    }
}